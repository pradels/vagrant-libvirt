name: Integration Tests

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test_name:
        - destroy simple vm
        - simple vm provision via shell
        - bring up with custom default prefix
        - bring up with second disk
        - bring up with two disks
        - bring up with adjusted memory settings
        - bring up with adjusted cpu settings
        - ip is reachable with private network

    env:
      NOKOGIRI_USE_SYSTEM_LIBRARIES: true
      VAGRANT_VERSION: v2.2.14

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up libvirt
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          bridge-utils \
          dnsmasq-base \
          ebtables \
          libvirt-clients \
          libvirt-daemon \
          libvirt-daemon-system \
          qemu-kvm \
          qemu-utils \
          libarchive-tools \
        ;
        sudo apt-get install \
          libvirt-dev \
          libz-dev \
        ;
        sudo apt-get install \
          bats \
          fping \
        ;

        # start daemon
        sudo systemctl start libvirtd

        # add user to group
        sudo usermod -a -G libvirt $USER
    - uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-
    - uses: actions/cache@v2
      with:
        path: ~/.vagrant.d/boxes
        key: ${{ runner.os }}-${{ env.VAGRANT_VERSION }}
        restore-keys: |
          ${{ runner.os }}-
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6.6
    - name: Set up rubygems
      run: |
        gem update --system --conservative || (gem i "rubygems-update:~>2.7" --no-document && update_rubygems)
        gem update bundler --conservative
    - name: Run bundler using cached path
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3
    - name: Install binstubs
      run: |
        bundle binstubs --all --path=./bin 1>/dev/null
        ./bin/vagrant --version
    - name: Run tests
      run: |
        mkdir -p $HOME/.vagrant.d/
        # use export with full path to avoid needing to resolve ~
        export VAGRANT_HOME=$HOME/.vagrant.d
        # use software emulation due to lack of nested emulation
        cat <<EOF > $HOME/.vagrant.d/Vagrantfile
        Vagrant.configure("2") do |config|
          config.vm.provider :libvirt do |libvirt|
            libvirt.driver = "qemu"
          end
        end
        EOF
        # run under libvirt group
        sg libvirt -c "bats -f '${{ matrix.test_name }}' ./tests/runtests.bats"
